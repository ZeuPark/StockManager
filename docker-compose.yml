version: '3.8'

services:
  # Main application
  stock-manager:
    build: .
    container_name: stock-manager-app
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config:ro
    environment:
      - ENVIRONMENT=production
      - PYTHONPATH=/app
    depends_on:
      - postgres
      - redis
    networks:
      - stock-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stock-manager-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: stock_manager
      POSTGRES_USER: stock_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-stock_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - stock-network

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: stock-manager-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - stock-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: stock-manager-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - stock-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: stock-manager-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - stock-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: stock-manager-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - stock-manager
    networks:
      - stock-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  stock-network:
    driver: bridge 